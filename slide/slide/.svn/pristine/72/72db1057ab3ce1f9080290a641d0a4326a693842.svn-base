#!/usr/bin/python
#
# Adam Rogalewicz
# 
# SL to TA - top level calls
# distrubuted under GNU GPL licence

# use python entailment.py file_with_pred1 file_with_pred2

import input
import rotate
import sys
import os
import vata
import functions
from settings import *
import emptyheap
import subprocess

def main(file_lhs,file_rhs,verbose):
	tiles=[]
	(aut1,emptyheap_eq1,eq_edges1)=input.parse_input(file_lhs,tiles)
	(aut2,emptyheap_eq2,eq_edges2)=input.parse_input(file_rhs,tiles)
	if not emptyheap.entailment(emptyheap_eq1,emptyheap_eq2):
		if verbose:
			print "Entailment result: (SAT/UNSAT):"
		print "UNSAT"
		return 0
	aut2_closure=rotate.rotate_closure(aut2,tiles)
	file1=functions.get_tmp_filename()
	file2=functions.get_tmp_filename()
	vata.aut_to_file(aut1,file1,"aut1")
	vata.call_vata_union(aut2_closure,file2)
	#print statistics in verbose mode
	if verbose:
		print "Number of states/transitions of A1: ",len(rotate.get_states(aut1)),"/", len(aut1["rules"])
		print "Number of states/transitions of A2 (before rot. closure): ",len(rotate.get_states(aut2)),"/",len(aut2["rules"])
		print "Number of states/transitions after closure of A2: ",len(vata.get_states_vata(file2)),"/",vata.get_trans_number(file2)
		print "Entailment result: (SAT/UNSAT):"
	#os.system("%s incl %s %s"%(VATA_path,file1,file2))
	result = subprocess.check_output("%s incl %s %s"%(VATA_path,file1,file2), shell=True)
	if result=="1\n":
		print "SAT"
	elif result=="0\n":
		if verbose and (eq_edges1 or eq_edges2):
			print "UNSAT (equality edges in use => not COMPLETE answer)"
		else:
			print "UNSAT"
	else:
		print "ERROR: %s us not a vata executable"
	# remove tmp files
	os.unlink(file1)
	os.unlink(file2)

# main call
if len(sys.argv)<3:
	print "Expected usage:"
	print "Standard mode (all error messages are provided): entailment.py file_with_pred1 file_with_pred2"
	print "Silent mode (no error messages): entailment.py -s file_with_pred1 file_with_pred2"
	sys.exit()
if sys.argv[1]=="-s":
	try:
		main(sys.argv[2],sys.argv[3],False)
	except:
		print "UNKNOWN"
		sys.exit(1)
else:
	main(sys.argv[1],sys.argv[2],True)
